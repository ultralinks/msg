// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userLogic.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request 请求结构
type AppRequest struct {
	AppKey               string   `protobuf:"bytes,1,opt,name=appKey,proto3" json:"appKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppRequest) Reset()         { *m = AppRequest{} }
func (m *AppRequest) String() string { return proto.CompactTextString(m) }
func (*AppRequest) ProtoMessage()    {}
func (*AppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_userLogic_78eb09e7ca9e1408, []int{0}
}
func (m *AppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppRequest.Unmarshal(m, b)
}
func (m *AppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppRequest.Marshal(b, m, deterministic)
}
func (dst *AppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppRequest.Merge(dst, src)
}
func (m *AppRequest) XXX_Size() int {
	return xxx_messageInfo_AppRequest.Size(m)
}
func (m *AppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppRequest proto.InternalMessageInfo

func (m *AppRequest) GetAppKey() string {
	if m != nil {
		return m.AppKey
	}
	return ""
}

// Reply 响应结构
type AppReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Key                  string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Secret               string   `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppReply) Reset()         { *m = AppReply{} }
func (m *AppReply) String() string { return proto.CompactTextString(m) }
func (*AppReply) ProtoMessage()    {}
func (*AppReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_userLogic_78eb09e7ca9e1408, []int{1}
}
func (m *AppReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppReply.Unmarshal(m, b)
}
func (m *AppReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppReply.Marshal(b, m, deterministic)
}
func (dst *AppReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppReply.Merge(dst, src)
}
func (m *AppReply) XXX_Size() int {
	return xxx_messageInfo_AppReply.Size(m)
}
func (m *AppReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AppReply.DiscardUnknown(m)
}

var xxx_messageInfo_AppReply proto.InternalMessageInfo

func (m *AppReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppReply) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *AppReply) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AppReply) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func init() {
	proto.RegisterType((*AppRequest)(nil), "proto.AppRequest")
	proto.RegisterType((*AppReply)(nil), "proto.AppReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	// 定义FetchApp方法
	FetchApp(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*AppReply, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) FetchApp(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*AppReply, error) {
	out := new(AppReply)
	err := c.cc.Invoke(ctx, "/proto.User/FetchApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	// 定义FetchApp方法
	FetchApp(context.Context, *AppRequest) (*AppReply, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_FetchApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).FetchApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.User/FetchApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).FetchApp(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchApp",
			Handler:    _User_FetchApp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userLogic.proto",
}

func init() { proto.RegisterFile("userLogic.proto", fileDescriptor_userLogic_78eb09e7ca9e1408) }

var fileDescriptor_userLogic_78eb09e7ca9e1408 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x2d, 0x4e, 0x2d,
	0xf2, 0xc9, 0x4f, 0xcf, 0x4c, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a,
	0x2a, 0x5c, 0x5c, 0x8e, 0x05, 0x05, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x62, 0x5c,
	0x6c, 0x89, 0x05, 0x05, 0xde, 0xa9, 0x95, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x50, 0x9e,
	0x52, 0x0e, 0x17, 0x07, 0x58, 0x55, 0x41, 0x4e, 0xa5, 0x10, 0x1f, 0x17, 0x53, 0x66, 0x0a, 0x54,
	0x9e, 0x29, 0x33, 0x45, 0x48, 0x88, 0x8b, 0x25, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x09, 0x2c, 0x02,
	0x66, 0x83, 0xc4, 0x52, 0x52, 0x8b, 0x93, 0x25, 0x98, 0x21, 0x62, 0x20, 0xb6, 0x90, 0x00, 0x17,
	0x73, 0x76, 0x6a, 0xa5, 0x04, 0x0b, 0x58, 0x08, 0xc4, 0x04, 0xd9, 0x56, 0x9c, 0x9a, 0x5c, 0x94,
	0x5a, 0x22, 0xc1, 0x0a, 0xb1, 0x0d, 0xc2, 0x33, 0xb2, 0xe0, 0x62, 0x09, 0x2d, 0x4e, 0x2d, 0x12,
	0x32, 0xe0, 0xe2, 0x70, 0x4b, 0x2d, 0x49, 0xce, 0x70, 0x2c, 0x28, 0x10, 0x12, 0x84, 0x38, 0x5b,
	0x0f, 0xe1, 0x58, 0x29, 0x7e, 0x64, 0xa1, 0x82, 0x9c, 0x4a, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x88,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x35, 0x3d, 0x8a, 0x65, 0xee, 0x00, 0x00, 0x00,
}
